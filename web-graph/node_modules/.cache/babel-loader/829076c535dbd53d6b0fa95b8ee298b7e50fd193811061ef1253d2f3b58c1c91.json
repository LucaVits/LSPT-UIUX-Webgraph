{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irock\\\\Documents\\\\RCOS\\\\LSPT-UIUX-Webgraph\\\\web-graph\\\\src\\\\components\\\\GraphPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport WebGraph from \"./WebGraph\";\nimport createInfoBox from \"./CreateInfoBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphPage = graphJson => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [datasets, setDatasets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(graphJson).then(response => response.json()).then(data => {\n      setDatasets(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error loading data:\", error);\n      setLoading(false);\n    });\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : datasets.nodes && datasets.edges ? /*#__PURE__*/_jsxDEV(WebGraph, {\n      datasets: {\n        nodes: datasets.nodes.map(node => ({\n          id: node.id.toString(),\n          title: `Node ${node.id}`,\n          link: `https://${node.url}`,\n          size: Math.round(node.page_rank * 100),\n          // Scale size for visualization\n          page_rank: node.page_rank\n        })),\n        edges: datasets.edges.map(edge => ({\n          source: edge.source.toString(),\n          target: edge.target.toString()\n        }))\n      },\n      renderInfoBox: node => createInfoBox(node.title, `${node.link}`, `This is node ${node.title}, which has a page rank of ${node.page_rank}.`),\n      width: 800,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found for this graph.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphPage, \"glaiMCtgqd0k/iGJHLISAAJMX2g=\", false, function () {\n  return [useParams];\n});\n_c = GraphPage;\nexport default GraphPage;\nvar _c;\n$RefreshReg$(_c, \"GraphPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","WebGraph","createInfoBox","jsxDEV","_jsxDEV","GraphPage","graphJson","_s","name","datasets","setDatasets","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","nodes","edges","map","node","id","toString","title","link","url","size","Math","round","page_rank","edge","source","target","renderInfoBox","width","height","_c","$RefreshReg$"],"sources":["C:/Users/irock/Documents/RCOS/LSPT-UIUX-Webgraph/web-graph/src/components/GraphPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport WebGraph from \"./WebGraph\";\r\nimport createInfoBox from \"./CreateInfoBox\";\r\n\r\nconst GraphPage = (graphJson) => {\r\n  const { name } = useParams();\r\n  const [datasets, setDatasets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(graphJson)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setDatasets(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [name]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        datasets.nodes && datasets.edges ? (\r\n          <WebGraph\r\n            datasets={{\r\n              nodes: datasets.nodes.map((node) => ({\r\n                id: node.id.toString(),\r\n                title: `Node ${node.id}`,\r\n                link: `https://${node.url}`,\r\n                size: Math.round(node.page_rank * 100), // Scale size for visualization\r\n                page_rank: node.page_rank,\r\n              })),\r\n              edges: datasets.edges.map((edge) => ({\r\n                source: edge.source.toString(),\r\n                target: edge.target.toString(),\r\n              })),\r\n            }}\r\n            renderInfoBox={(node) =>\r\n              createInfoBox(\r\n                node.title,\r\n                `${node.link}`,\r\n                `This is node ${node.title}, which has a page rank of ${node.page_rank}.`\r\n              )\r\n            }\r\n            width={800}\r\n            height={600}\r\n          />\r\n        ) : (\r\n          <p>No data found for this graph.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default GraphPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}