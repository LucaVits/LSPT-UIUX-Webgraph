{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irock\\\\Documents\\\\RCOS\\\\LSPT-UIUX-Webgraph\\\\web-graph\\\\src\\\\components\\\\GraphPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport WebGraph from \"./WebGraph\";\nimport createInfoBox from \"./CreateInfoBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [datasets, setDatasets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`/json/graphs/${name}.json`).then(response => response.json()).then(data => {\n      setDatasets(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error loading data:\", error);\n      setLoading(false);\n    });\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : datasets.length > 0 && /*#__PURE__*/_jsxDEV(WebGraph, {\n      datasets: datasets,\n      renderInfoBox: node => createInfoBox(node.title, `${node.link}`, `This is node ${node.title}, which has the color ${node.color}.`),\n      width: 800,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), datasets.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found for this graph.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphPage, \"glaiMCtgqd0k/iGJHLISAAJMX2g=\", false, function () {\n  return [useParams];\n});\n_c = GraphPage;\nexport default GraphPage;\nvar _c;\n$RefreshReg$(_c, \"GraphPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","WebGraph","createInfoBox","jsxDEV","_jsxDEV","GraphPage","_s","name","datasets","setDatasets","loading","setLoading","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","renderInfoBox","node","title","link","color","width","height","_c","$RefreshReg$"],"sources":["C:/Users/irock/Documents/RCOS/LSPT-UIUX-Webgraph/web-graph/src/components/GraphPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport WebGraph from \"./WebGraph\";\r\nimport createInfoBox from \"./CreateInfoBox\";\r\n\r\nconst GraphPage = () => {\r\n  const { name } = useParams();\r\n  const [datasets, setDatasets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    fetch(`/json/graphs/${name}.json`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setDatasets(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [name]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        datasets.length > 0 && (\r\n          <WebGraph\r\n            datasets={datasets}\r\n            renderInfoBox={(node) =>\r\n              createInfoBox(\r\n                node.title,\r\n                `${node.link}`,\r\n                `This is node ${node.title}, which has the color ${node.color}.`\r\n              )\r\n            }\r\n            width={800}\r\n            height={600}\r\n          />\r\n        )\r\n      )}\r\n      {datasets.length === 0 && !loading && <p>No data found for this graph.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,IAAI,CAAC;IAEhBC,KAAK,CAAC,gBAAgBL,IAAI,OAAO,CAAC,CAC/BM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,WAAW,CAACO,IAAI,CAAC;MACjBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAAgB,QAAA,GACGV,OAAO,gBACNN,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtBhB,QAAQ,CAACiB,MAAM,GAAG,CAAC,iBACjBrB,OAAA,CAACH,QAAQ;MACPO,QAAQ,EAAEA,QAAS;MACnBkB,aAAa,EAAGC,IAAI,IAClBzB,aAAa,CACXyB,IAAI,CAACC,KAAK,EACV,GAAGD,IAAI,CAACE,IAAI,EAAE,EACd,gBAAgBF,IAAI,CAACC,KAAK,yBAAyBD,IAAI,CAACG,KAAK,GAC/D,CACD;MACDC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAEJ,EACAhB,QAAQ,CAACiB,MAAM,KAAK,CAAC,IAAI,CAACf,OAAO,iBAAIN,OAAA;MAAAgB,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3CID,SAAS;EAAA,QACIL,SAAS;AAAA;AAAAiC,EAAA,GADtB5B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}